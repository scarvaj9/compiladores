package analizadorProyecto;
import java_cup.runtime.*;

parser code {:
    public String errsin="";
    public void syntax_error (Symbol  x){
        errsin+="\nError Sintaxis en posici√≥n "+ (x.left+1) + "," + (x.right+1);
        throw new UnsupportedOperationException (errsin);
    }
:};

terminal finpara,enton,coma,cad,op,num,id,pd,pi,inicio,sino,fin,finsi,mientras,finmien,hacer,leer,eq,ol,or,tipoEntero,p_coma,tipoReal,si,escri,para,real,hasta,paso;
non terminal OUT,VARIABLES,TIPO,S,T2,IN1,PROCE,INICIO,PRO,IN,INST,EA1,E1,T1,SENTENCIA,CICLOMIENTRAS,CICLOPARA,CONDICIONAL,ESCRITURA,DL,OPERACIONES,AUXILIAR,TERMINO,Q,IS,I,EL,EA,E,T,ENPAREJA,SINPAREJA;

start with INICIO;

INICIO::= inicio id S fin|inicio S fin;
S::=SENTENCIA|SENTENCIA S;
SENTENCIA::= mientras CICLOMIENTRAS|si CONDICIONAL|para CICLOPARA|TIPO DL|leer DL|escri ESCRITURA|id eq OPERACIONES;
TIPO::=tipoEntero|tipoReal;
DL::=VARIABLES p_coma;
VARIABLES::= id|id coma VARIABLES;
ESCRITURA::= OUT p_coma;
OUT::=id|id coma OUT|cad|cad coma OUT;
OPERACIONES::= Q p_coma;
Q ::= AUXILIAR;  
AUXILIAR ::= AUXILIAR op TERMINO;
AUXILIAR ::= TERMINO;
TERMINO ::=  num | real | id;
TERMINO ::= pi Q pd;
CICLOMIENTRAS::=pi EL pd hacer IS finmien;
IS::=I;
IS::=I IS;
I::= SENTENCIA;
EL ::= EL ol EA;
EL ::= EA;
EA ::= E or E;
EA ::= E;
E ::= E op T;
E ::= T;
T ::= num | id;
T ::= pi EL pd;

CONDICIONAL::= ENPAREJA| SINPAREJA; // la pareja son los que tiene if then else y los sin pareja solo if then 
SINPAREJA::= pi PRO pd enton INST finsi;
ENPAREJA::= pi PRO pd enton INST sino INST finsi;
INST::=IN;
INST::=IN INST;
IN::= SENTENCIA;
PRO ::= PRO ol EA1;
PRO ::= EA1;
EA1 ::= E1 or E1;
EA1 ::= E1;
E1 ::= E1 op T1;
E1 ::= T1;
T1 ::= num | id;
T1 ::= pi PRO pd;

CICLOPARA ::= id eq num hasta T2 paso num PROCE finpara|id eq num hasta T2 PROCE finpara;
PROCE::=IN1;
PROCE::=IN1 PROCE;
IN1::= SENTENCIA;
T2 ::= num | id;